[{"categories":null,"content":"Harry Potter ","date":"2022-01-14","objectID":"/movies/my-first-post/:1:0","tags":null,"title":"影评","uri":"/movies/my-first-post/"},{"categories":["diary"],"content":"Today’s achievement: 阅读了一篇经济学人文章 完成了神经网络课程的大作业proposal ","date":"2021-04-19","objectID":"/04-19-21-diary/:1:0","tags":["English"],"title":"04 19 21 Diary","uri":"/04-19-21-diary/"},{"categories":["diary"],"content":"1. The Economists pragmatic: dealing with problems in a sensible, practical way instead of strictly follow a set of principles. Ross took a more pragmatic approach to management this problem. ill-fated: 不幸的，倒霉的 an ill-fated expedition 一场注定不成功的冒险 fascism: 法西斯主义 espouse: to support an idea, belife etc, especially a political one. He espouses a variety of scientific, social and political causes. referendum: when people vote in order to make a decision about a paricular subject, rather than voting for a person. vexed: a complicated problem that has caused a lot of discussion and argument and is difficult to solve. vexed issue / problem / question etc. resentment: a feeling of anger because something has happened that you think is unfair. He felt considerable resentment towards Bob for making him work late. fester: 1) if an unpleasent feeling or problem festers, it gets worse because it has not been dealt with. 2) if a wound festers, it becomes infected. Resentments fester. fray: 磨损 He had frayed the bottom of his jeans. bicker: to argue, especially about something unimportant. When not bickering about the constitutional question, the UK’s constitutent parts work together well. plaster: 1）石灰 2） to put a wet, usually sticky substance all over a surface so that it is thick covered. Her face was plastered with make-up. friction: 1) disagreement, angry feelings, or unfriendness between people. 2)the nature force that prevents one surface from sliding easily over another surface. He need to improve the Britain’s relation with Europe, including by aligning Britain’s food-and-agriculture standards with those of the EU – the main source of trade friction that has infuriated Northen Ireland’s unionists. Check your rope frequently, as friction against the rock can wear it away. jeopardy: in danger of beeing lost or damaged. That would make a trade deal with America harder, but no such deal is on offer now, and none ever will be if the peace in Northen Ireland is put in jeopardy. Bangal 孟加拉 Bangladeshi 孟加拉人 Serbia 塞尔维亚 Serb 塞尔维亚人 Croatia 克罗地亚 Croat 克罗地亚人 Czech 捷克人 Slovak 斯洛伐克人 ","date":"2021-04-19","objectID":"/04-19-21-diary/:1:1","tags":["English"],"title":"04 19 21 Diary","uri":"/04-19-21-diary/"},{"categories":["diary"],"content":"tricks汇总 linux下的tar命令 -f 指定archive文件 -z 使用gzip处理archive文件，生成或解压缩.gz文件 -x 从archive中还原文件 -c 建立新的archive文件 tar -zxvf file.tar.gz 解压缩得到.tar的archive然后还原archive得到file tar -zcvf file.tar.gz file 打包并用gzip压缩 linux下的zip命令： 用于压缩文件 -r 递归处理指定文件目录 -d 从.zip文件中删除指定文件 unzip 用于解压缩 latex多图并排 \\begin{figure}[H] \\centering %图片全局居中 \\subfigure[name1]{ \\label{Fig.sub.1} \\includegraphics[width=0.45\\textwidth]{a.pdf}} \\subfigure[name2]{ \\label{Fig.sub.2} \\includegraphics[width=0.45\\textwidth]{b.pdf}} \\caption{Main name} \\label{Fig.main} \\end{figure} pandas 基本数据类型 Series: 一维带标签的数组， ndarray-like， dict-like DataFrame: 二维的数据结构，不同的列可能有不同的数据类型，相当于一个spreadsheet In [37]: d = { \"one\": pd.Series([1.0, 2.0, 3.0], index=[\"a\", \"b\", \"c\"]), \"two\": pd.Series([1.0, 2.0, 3.0, 4.0], index=[\"a\", \"b\", \"c\", \"d\"]),} In [38]: df = pd.DataFrame(d) In [39]: df Out[39]: one two a 1.0 1.0 b 2.0 2.0 c 3.0 3.0 d NaN 4.0 从 .txt等 中读取数据 pd.read_csv(\"a.txt\", header=None) 太杂了，边用边学吧 ","date":"2021-04-07","objectID":"/20-04-07-diary/:1:0","tags":["linux","pandas"],"title":"20/04/07 Diary","uri":"/20-04-07-diary/"},{"categories":["diary"],"content":"杂记 看到刘尚育大佬的豆瓣日记，写的他去跳蚤市场买了白岩诗社的胸针且偶遇了一位姑娘后来又一起参加沙龙的故事。没有细读，但真的是让人读起来感觉美好，如清风徐来。不知道是自己阅读太少还是懒于思考的缘故，想要用文字记录时想到的只是初高中应试练就的套路。最近记忆力也差了许多，莫非是要学要记的东西太多，感觉确实太多但又都想记住，但又真的努力去记住了么？有些东西，虽然读起来很熟悉，但自己从头开始复述却陌生的很。 你我今夜共在香樟下，像草垛在风力寻找火种 –香樟狂想曲 豫章故郡，洪都新府，星分翼枕，地接衡庐 ","date":"2021-04-07","objectID":"/20-04-07-diary/:1:1","tags":["linux","pandas"],"title":"20/04/07 Diary","uri":"/20-04-07-diary/"},{"categories":null,"content":"MPI 初探 MPI_Init(NULL, NULL); // 两个参数保留未来使用 MPI_COMM_WORLD // a built-in communicator 每个进程有一个特定的rank 获取进程rank: int world_rank; MPI_Comm_Rank(MPI_COMM_WORLD, \u0026world_rank); 获取总的并行进程数： int world_size; MPI_Comm_Size(MPI_COMM_WORLD, \u0026world_size) ","date":"2021-04-07","objectID":"/mpi_first/:0:0","tags":["MPI"],"title":"MPI_first","uri":"/mpi_first/"},{"categories":null,"content":"Message sending and receiving 发送消息 MPI_Send( void* data, int count, MPI_Type datatype, int destination, int tag, MPI_Comm communicator ) 接收消息 MPI_Receive( void* data, int count, MPI_Type datatype, int source, int tag, MPI_Comm communicator ) task due 学习pytorch的自动求导机制 4/10 学习cmake和make相关知识 4/10 ","date":"2021-04-07","objectID":"/mpi_first/:1:0","tags":["MPI"],"title":"MPI_first","uri":"/mpi_first/"},{"categories":null,"content":"GPU Memory Model ","date":"2020-12-07","objectID":"/gpu_mm/:0:0","tags":["GPU"],"title":"GPU_MM","uri":"/gpu_mm/"},{"categories":null,"content":"自动执行的一批命令（用户级别） 当bash最为注册shell被启动时：自动执行~/.bash_profile 当bash作为注册shell退出时：自动执行~/.bash_logout 当bash作为交互式shell启动时：自动执行~/.bashrc 脚本文件 bash -x \u003c.sh\u003e: 打印每一行命令 ./xx.sh: 在子进程中执行 . xx.sh = source xx.sh： 在当前shell进程中执行 ","date":"2020-11-16","objectID":"/shell_basic1/:0:0","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":null,"content":"历史与别名 ","date":"2020-11-16","objectID":"/shell_basic1/:1:0","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":null,"content":"历史表 先前键入的命令存于历史表 编号递增，FIFO刷新 表大小由变量HISTSIZE设定，该配置位于~/.bashrc history：查看历史命令 !! : 引用上一命令 !str ： 以str开头的最近使用的命令 ","date":"2020-11-16","objectID":"/shell_basic1/:1:1","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":null,"content":"别名和别名替换 alias alias rm = ‘rm -i’ ","date":"2020-11-16","objectID":"/shell_basic1/:1:2","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":null,"content":"输入重定向 stdin 0号文件描述符 \u003c file: 从file中获取输入 \u003c\u003c STR: 从shell中获取输入，直到再次遇到字符串STR，同时会对特殊变量进行替换，例如`date`，若禁止替换，使用 \u003c\u003c ‘STR’ \u003c\u003c\u003c ABCD: 获得的输入即为’ABCD' base64：将输入变为base64编码 ","date":"2020-11-16","objectID":"/shell_basic1/:1:3","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":null,"content":"输出重定向与管道 \u003e filename: stdout输出到文件（覆盖） \u003e\u003e filename: stdout输出到文件（追加） 2\u003e filename: stderr输出到文件 2\u003e\u00261 filename: 将文件句柄2重定向到文件描述符1指向的文件 gcc test.c \u003e test.err \u003e 2\u003e\u00261 管道：仅把stdout进行管道， 如果需将stderr管道 2\u003e\u00261 ","date":"2020-11-16","objectID":"/shell_basic1/:1:4","tags":null,"title":"Shell_basic1","uri":"/shell_basic1/"},{"categories":["linux"],"content":"每日Linux命令 ","date":"2020-11-15","objectID":"/linux_11-15/:0:0","tags":["linux"],"title":"Linux_11 15","uri":"/linux_11-15/"},{"categories":["linux"],"content":"1. watch 周期性的执行一个命令并展示其输出 -n(–interval) \u003csecs\u003e 间隔多少秒执行 ","date":"2020-11-15","objectID":"/linux_11-15/:1:0","tags":["linux"],"title":"Linux_11 15","uri":"/linux_11-15/"},{"categories":["linux"],"content":"2. nohup 运行一个命令，对hangup免疫，连接远程主机即使终端连接中断也可以在server端继续执行。 nohup \u003ccommond\u003e ","date":"2020-11-15","objectID":"/linux_11-15/:2:0","tags":["linux"],"title":"Linux_11 15","uri":"/linux_11-15/"},{"categories":["linux"],"content":"3. terminal, shell , console terminal = tty(the first kind of terminal (类似于打字机))， 现代意义的terminal，tty都是软件意义上的，text input/output environment. console(控制台)：physical terminal(bind with 键盘) shell: 命令行的interpreter ","date":"2020-11-15","objectID":"/linux_11-15/:3:0","tags":["linux"],"title":"Linux_11 15","uri":"/linux_11-15/"},{"categories":null,"content":"Git-1 远程仓库 ","date":"2020-11-12","objectID":"/git_branch/:0:0","tags":null,"title":"Git_branch","uri":"/git_branch/"},{"categories":null,"content":"如何新添加一个远程仓库 远程仓库是host在其他地方的仓库，为了进行collaborate， 需要add，remove远程仓库，管理远程分支。 展示远程仓库 git remote 添加远程仓库 git remote add \u003cshortname\u003e \u003curl\u003e ","date":"2020-11-12","objectID":"/git_branch/:1:0","tags":null,"title":"Git_branch","uri":"/git_branch/"},{"categories":null,"content":"Hello world. 🚀 ","date":"2020-11-11","objectID":"/first_post/:0:0","tags":null,"title":"First_post","uri":"/first_post/"}]